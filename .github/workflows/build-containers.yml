name: Build Containers

on:
  pull_request:
    paths:
      - devops/docker/**/Dockerfile
  push:
    branches:
      - main
    paths:
      - devops/docker/**/Dockerfile
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  MOUNT: /azure-osconfig

jobs:
  modified-containers:
    name: Modified containers
    runs-on: ubuntu-latest
    outputs:
      containers: ${{ steps.matrix.outputs.containers }}
    steps:
      - uses: actions/checkout@v2

      - name: Get changed containers
        id: changed-containers
        uses: tj-actions/changed-files@v18.7
        with:
          files: ./devops/docker/**/Dockerfile

      - name: Create build matrix
        id: matrix
        run: |
          # If this workflow is present in other_changed_files, then rebuild all containers
          if [[ "${{ steps.changed-containers.outputs.other_changed_files }}" == *".github/workflows/build-containers.yml"* ]]; then
            echo "Workflow file changed, adding all containers to build matrix..."
            containers=$(ls -d devops/docker/**/Dockerfile | jq -R . | jq -s .)
          else
            containers=$(echo -n ${{ steps.changed-containers.outputs.all_changed_files }} | jq -R -s -c 'split(" ")')
          fi

          echo Containers to build: $containers
          echo containers=$containers >> $GITHUB_OUTPUT

  docker-build:
    name: Docker
    needs: modified-containers
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        container: ${{ fromJson(needs.modified-containers.outputs.containers) }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Only checkout submodules recursively if this is a pull request
          submodules: ${{ github.event_name == 'pull_request' && 'recursive' || 'false' }}

      - name: Setup image
        id: image
        run: |
          dockerfile=${{ matrix.container }}
          image=${dockerfile#devops/docker/}
          image=${image%/*}
          distro=${image%-*}
          platform=${image#*-}

          repo=$(echo ${{ github.repository }} | awk '{print tolower($0)}')

          echo name=$(echo -n $repo/$image) >> $GITHUB_OUTPUT
          echo path=$(dirname ${dockerfile}) >> $GITHUB_OUTPUT
          echo distro=$(echo -n $distro) >> $GITHUB_OUTPUT
          echo platform=$(echo -n $platform) >> $GITHUB_OUTPUT

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login (azurecr.io)
        if: false
        uses: docker/login-action@v2
        with:
          registry: osconfig.azurecr.io
          username: ${{ secrets.ACR_CLIENT_ID }}
          password: ${{ secrets.ACR_CLIENT_SECRET }}

      - name: Docker login (ghcr.io)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build
        uses: docker/build-push-action@v3
        with:
          context: ${{ steps.image.outputs.path }}
          load: true
          tags: |
            ${{ steps.image.outputs.name }}:latest
            ${{ steps.image.outputs.name }}:${{ github.run_number }}
            ${{ steps.image.outputs.name }}:${{ github.sha }}

      # Test the container image on 'pull_request' events

      - name: Run container
        if: ${{ github.event_name == 'pull_request' }}
        id: container
        uses: ./.github/actions/container-run
        with:
          container: ${{ steps.image.outputs.name }}
          platform: ${{ steps.image.outputs.platform }}
          mount: ${{ github.workspace }}:${{ env.MOUNT }}
          tag: ${{ github.sha }}

      - name: Build azure-osconfig
        if: ${{ github.event_name == 'pull_request' }}
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          cmd: |
            mkdir build && cd build
            cmake ../src -DCMAKE_build-type=${{ env.BUILD_TYPE }} -Duse_prov_client=ON -Dhsm_type_symm_key=ON -DCOMPILE_WITH_STRICTNESS=ON -DBUILD_TESTS=ON -DBUILD_SAMPLES=ON -DBUILD_AGENTS=ON -G Ninja
            cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: Docker push (ghcr.io)
        # Only push the image when a pull request is merged to main
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v3
        with:
          push: true
          registry: ghcr.io
          tags: |
            ${{ steps.image.outputs.name }}:latest
            ${{ steps.image.outputs.name }}:${{ github.run_number }}
            ${{ steps.image.outputs.name }}:${{ github.sha }}

      - name: Docker push (azurecr.io)
        # Only push the image when a pull request is merged to main
        # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        if: false
        run: |
          docker buildx imagetools create \
            --tag osconfig.azurecr.io/${{ steps.image.outputs.name }}:latest \
            --tag osconfig.azurecr.io/${{ steps.image.outputs.name }}:${{ github.run_number }} \
            --tag osconfig.azurecr.io/${{ steps.image.outputs.name }}:${{ github.sha }} \
            ghcr.io/${{ steps.image.outputs.name }}:latest
