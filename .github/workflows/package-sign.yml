name: Sign Package

on:
  workflow_call:
    inputs:
      artifact:
        description: The package artifact to sign. A new artifact (<artifact>-signed) will be created containing the signed packages.
        type: string
        required: false
        default: "package"
    outputs:
      artifact:
        description: The signed package artifact that is created.
        value: ${{ jobs.signing.outputs.artifact }}

jobs:
  signing:
    name: Signing
    runs-on: windows-latest
    outputs:
      artifact: ${{ steps.artifact.outputs.name }}
    environment: esrp

    steps:
      - uses: actions/checkout@v3

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact }}
          path: unsigned

      - name: Setup ESRP
        env:
          AZURE_VAULT: ${{ secrets.AZURE_VAULT }}
          AUTH_CERT: ${{ secrets.AZURE_VAULT_AUTH_CERT_NAME }}
          REQUEST_SIGNING_CERT: ${{ secrets.AZURE_VAULT_REQUEST_SIGNING_CERT_NAME }}
        run: |
          # Install ESRP client
          az storage blob download --file esrp.zip --auth-mode login --account-name osconfig --container esrpclient --name esrpclient.zip
          Expand-Archive -Path esrp.zip -DestinationPath .\esrp

          # Install certificates
          az keyvault secret download --vault-name "$AZURE_VAULT" --name "$AUTH_CERT" --file out.pfx
          certutil -f -importpfx out.pfx
          Remove-Item out.pfx

          az keyvault secret download --vault-name "$AZURE_VAULT" --name "$REQUEST_SIGNING_CERT" --file out.pfx
          certutil -f -importpfx out.pfx
          Remove-Item out.pfx

      - name: Create signing job
        id: signing
        run: |
          $files = (ls unsigned/*.deb | select -expand Name)
          $source = "${{ github.workspace }}\unsigned"
          $target = "${{ github.workspace }}\${{ inputs.artifact }}-signed"
          mkdir $target

          cd .\esrp\createJob.ps1 $files $source $target
          cat Job.json

          echo artifact=${{ inputs.artifact }}-signed >> $GITHUB_OUTPUT
          echo target=$target >> $GITHUB_OUTPUT

      - name: Sign Packages
        run: |
          $auth = ".\esrp\Config\Auth.json"
          $config = ".\esrp\Config\Config.json"
          $policy = ".\esrp\Config\Policy.json"
          $output = "${{ steps.signing.outputs.target }}\output.json"

          .\esrp\EsrpClient.exe Sign -a $auth -c $config -p $policy -o $output -l Verbose

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.signing.outputs.artifact }}
          path: ${{ steps.signing.outputs.target }}
