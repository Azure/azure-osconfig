name: Build Package

on:
  workflow_call:
    inputs:
      artifact:
        description: The artifact name containing the packages from this workflow.
        type: string
        required: false
        default: 'package'
      build-type:
        description: The type of build to perform (Debug | Release).
        type: string
        required: false
        default: 'Release'
      target:
        description: The operating system target to build for.
        type: string
        required: true
      arch:
        description: The architecture to build for.
        type: string
        required: true
      package-type:
        description: The type of package to build (deb | rpm).
        type: string
        required: true
      test:
        description: Include test collateral in the artifact.
        type: boolean
        required: false
        default: false
      release:
        type: boolean
        required: false
        default: false

env:
  BUILD_TYPE: Release
  MOUNT: /azure-osconfig
  REGISTRY: ghcr.io

jobs:
  package:
    runs-on: ${{ inputs.release == true && fromJSON('["self-hosted", "1ES.Pool=release-pool", "1ES.ImageOverride=ubuntu-22.04"]') || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          clean: true

      - name: Run container
        id: container
        uses: ./.github/actions/container-run
        with:
          registry: ${{ env.REGISTRY }}
          container: azure/azure-osconfig/${{ inputs.target }}-${{ inputs.arch }}
          mount: ${{ github.workspace }}:${{ env.MOUNT }}

      - name: Set tweak
        id: version
        run: |
          # Set the tweak version (YYMMDD + 2 digit run attempt)
          now=$(date +'%Y%m%d')
          number=$(printf '%02d' ${{ github.run_attempt }})
          tweak="$(date +'%Y%m%d')$(printf '%02d' ${{ github.run_attempt }})"

          echo date: $now
          echo number: $number
          echo tweak: $tweak

          echo tweak=$tweak >> $GITHUB_OUTPUT

      - run: mkdir build && cd build

      - name: Generate build
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          working-directory: ${{ env.MOUNT }}/build
          cmd: |
            cmake ../src -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DTWEAK_VERSION=${{ steps.version.outputs.tweak }} -Duse_prov_client=ON -Dhsm_type_symm_key=ON -DCOMPILE_WITH_STRICTNESS=ON -DBUILD_TESTS=OFF -DBUILD_MODULETEST=ON -DBUILD_SAMPLES=OFF ${{ inputs.target == 'mariner-2' && '-Duse_default_uuid=ON' || '' }} -DBUILD_ADAPTERS=ON -G Ninja

      - name: Build azure-osconfig
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          working-directory: ${{ env.MOUNT }}/build
          cmd: cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: Run cpack
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          working-directory: ${{ env.MOUNT }}/build
          cmd: cpack -G ${{ inputs.package-type }}

      - name: Binary footprint delta validation
        uses: ./.github/actions/footprint-check
        with:
          allowedDelta: 10
          distroName: ${{ matrix.os }}
          arch: ${{ matrix.variant.arch }}
          package-type: ${{ inputs.package-type }}

      - uses: actions/upload-artifact@v3
        if: ${{ inputs.test }}
        with:
          name: ${{ inputs.artifact }}
          path: |
            ./build/osconfig*
            ./build/modules/test/moduletest
            ./build/modules/bin/*.so

      - uses: actions/upload-artifact@v3
        if: ${{ !inputs.test }}
        with:
          name: ${{ inputs.artifact }}
          path: ./build/osconfig*
