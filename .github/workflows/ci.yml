name: CI

on: [pull_request]

env:
  BUILD_TYPE: Release
  MOUNT: /azure-osconfig
  REGISTRY: ghcr.io

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            { name: amazonlinux-2, arch: amd64 },
            { name: centos-7, arch: amd64 },
            { name: centos-8, arch: amd64 },
            { name: debian-10, arch: amd64 },
            { name: debian-11, arch: amd64 },
            { name: debian-12, arch: amd64 },
            { name: mariner-2, arch: amd64 },
            { name: oraclelinux-7, arch: amd64 },
            { name: oraclelinux-8, arch: amd64 },
            { name: rhel-7, arch: amd64 },
            { name: rhel-8, arch: amd64 },
            { name: rhel-9, arch: amd64 },
            { name: sles-15, arch: amd64 },
            { name: ubuntu-20.04, arch: amd64 },
            { name: ubuntu-22.04, arch: amd64 },
          ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          clean: true

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Run container
        id: container
        uses: ./.github/actions/container-run
        with:
          registry: ${{ env.REGISTRY }}
          container: azure/azure-osconfig/${{ matrix.target.name }}-${{ matrix.target.arch }}
          mount: ${{ github.workspace }}:${{ env.MOUNT }}

      - name: Generate build
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          cmd: |
            mkdir build && cd build
            cmake ../src -DCMAKE_build-type=${{ env.BUILD_TYPE }} -Duse_prov_client=ON -Dhsm_type_symm_key=ON -DCOMPILE_WITH_STRICTNESS=ON -DBUILD_TESTS=ON -DBUILD_SAMPLES=ON -DBUILD_ADAPTERS=ON -Duse_default_uuid=ON

      - name: Build azure-osconfig
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          working-directory: ${{ env.MOUNT }}/build
          cmd: cmake --build . --config ${{ env.BUILD_TYPE }} --parallel

      - name: Run ctest
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          working-directory: ${{ env.MOUNT }}/build
          cmd: ctest --verbose > ../${{ matrix.target.name }}-${{ matrix.target.arch }}.log

      - name: Generate test report
        uses: ./.github/actions/gtest-xml
        if: success() || failure()
        with:
          path: ./build/gtest-output
          output: ${{ matrix.target.name }}-${{ matrix.target.arch }}.xml

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: unit-test
          path: |
            ${{ matrix.target.name }}-${{ matrix.target.arch }}.log
            ${{ matrix.target.name }}-${{ matrix.target.arch }}.xml

  universal-nrp-test:
    name: Test
    uses: ./.github/workflows/guestconfiguration-test-run.yml
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            { os: ubuntu, version: 20.04, package-type: DEB, tag: ''},
          ]
        arch: [amd64]
    with:
      target: ${{ matrix.target.os }}-${{ matrix.target.version }}
      arch: ${{ matrix.arch }}
      package-type: ${{ matrix.target.package-type }}
      tag: ${{ matrix.target.tag }}