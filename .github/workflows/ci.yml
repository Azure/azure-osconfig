name: CI

on:
  push: #TODO: Remove before checkin
  pull_request:
  schedule:
    - cron: '0 20 * * *' # Every day at 12pm PST (UTC-8)

env:
  BUILD_TYPE: Release

jobs:
  create-ci-matrix:
    name: Build CI distro matrix
    runs-on: ubuntu-latest
    outputs:
      amd64matrix: ${{ steps.get-matrix.outputs.amd64matrix }}
      arm64matrix: ${{ steps.get-matrix.outputs.arm64matrix }}
    steps:
      - name: Get matrix
        id: get-matrix
        run: |
          amd64Targets="$(cat <<'EOL'
          [
            # { "name": "amazonlinux-2", "arch": "amd64" },
            # { "name": "centos-7", "arch": "amd64" },
            # { "name": "centos-8", "arch": "amd64" },
            # { "name": "debian-10", "arch": "amd64" },
            # { "name": "debian-11", "arch": "amd64" },
            # { "name": "debian-12", "arch": "amd64" },
            # { "name": "mariner-2", "arch": "amd64" },
            # { "name": "oraclelinux-7", "arch": "amd64" },
            # { "name": "oraclelinux-8", "arch": "amd64" },
            # { "name": "rhel-7", "arch": "amd64" },
            # { "name": "rhel-8", "arch": "amd64" },
            # { "name": "rhel-9", "arch": "amd64" },
            # { "name": "sles-15", "arch": "amd64" },
            { "name": "ubuntu-20.04", "arch": "amd64" }
            # { "name": "ubuntu-22.04", "arch": "amd64" }
          ]
          EOL
          )"

          arm64Targets="$(cat <<'EOL'
          [
            # { "name": "debian-10", "arch": "arm64" },
            # { "name": "debian-11", "arch": "arm64" },
            # { "name": "debian-12", "arch": "arm64" },
            { "name": "ubuntu-20.04", "arch": "arm64" }
            # { "name": "ubuntu-22.04", "arch": "arm64" }
          ]
          EOL
          )"

          echo Distros to perform CI on (AMD64): $amd64Targets
          echo Distros to perform CI on (ARM64): $arm64Targets
          echo amd64matrix=$amd64Targets >> $GITHUB_OUTPUT
          echo arm64matrix=$arm64Targets >> $GITHUB_OUTPUT

  unit-test-amd64:
    name: Unit test
    needs: create-ci-matrix
    runs-on: ${{ fromJSON('["self-hosted", "1ES.Pool=ci-pool", "1ES.ImageOverride=ubuntu-22.04"]') }}
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.create-ci-matrix.outputs.amd64matrix) }}
    container:
      image: ghcr.io/azure/azure-osconfig/${{ matrix.target.name }}-${{ matrix.target.arch }}
      volumes:
        - ${{ github.workspace }}:/azure-osconfig
          
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          clean: true

      - name: Unit Test
        uses: ./.github/actions/unit-test
        with:
          name: ${{ matrix.target.name }}
          arch: ${{ matrix.target.arch }}
          build-type: ${{ env.BUILD_TYPE }}