name: CI

on: [pull_request]

env:
  BUILD_TYPE: Release
  MOUNT: /azure-osconfig
  REGISTRY: ghcr.io

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, debian-10, debian-11, mariner-2]
        arch: [arm, arm64, amd64]
        exclude:
          - os: ubuntu-22.04
            arch: arm
          - os: ubuntu-22.04
            arch: arm64
          - os: mariner-2
            arch: arm
          - os: mariner-2
            arch: arm64

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          clean: true

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Run container
        id: container
        uses: ./.github/actions/container-run
        with:
          registry: ${{ env.REGISTRY }}
          container: azure/azure-osconfig/${{ matrix.os }}-${{ matrix.arch }}
          mount: ${{ github.workspace }}:${{ env.MOUNT }}

      - name: Generate build
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          cmd: |
            mkdir build && cd build
            cmake ../src -DCMAKE_build-type=${{ env.BUILD_TYPE }} -Duse_prov_client=ON -Dhsm_type_symm_key=ON -DCOMPILE_WITH_STRICTNESS=ON -DBUILD_TESTS=ON -DBUILD_SAMPLES=ON -DBUILD_ADAPTERS=ON ${{ matrix.os == 'mariner-2' && '-Duse_default_uuid=ON' || '' }} -G Ninja

      - name: Build azure-osconfig
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          working-directory: ${{ env.MOUNT }}/build
          cmd: cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: Run ctest
        uses: ./.github/actions/container-exec
        with:
          container: ${{ steps.container.outputs.id }}
          working-directory: ${{ env.MOUNT }}/build
          cmd: ctest --verbose > ../${{ matrix.os }}-${{ matrix.arch }}.log

      - name: Generate test report
        uses: ./.github/actions/gtest-xml
        if: success() || failure()
        with:
          path: ./build/gtest-output
          output: ${{ matrix.os }}-${{ matrix.arch }}.xml

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: unit-test
          path: |
            ${{ matrix.os }}-${{ matrix.arch }}.log
            ${{ matrix.os }}-${{ matrix.arch }}.xml
