#!/bin/sh
# postinst script for osconfig
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installsystemd/12.10ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# MSFT change: binplace osconfig.toml for the azure-identity-service only if not present
	# Binplacing a pre-existing install breaks the current identity
	if [ ! -e /etc/aziot/identityd/config.d/osconfig.toml ]; then
		cp /etc/osconfig/osconfig.toml /etc/aziot/identityd/config.d/
	fi
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		# MSFT change: dh_installsystemd uses deb-systemd-invoke which fails
		# when /usr/sbin/policy-rc.d fails, use systemctl directly
		systemctl enable 'osconfig.service' >/dev/null || true
		systemctl $_dh_action 'osconfig.service' >/dev/null || true
	fi
	# MSFT change: signal aziot to reload module identities
	if command -v aziotctl >/dev/null; then
		aziotctl system restart >/dev/null || true
	fi
fi
# End automatically added section

exit 0
