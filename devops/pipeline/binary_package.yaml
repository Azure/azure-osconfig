# Packaging pipeline for the following distros - produces amd64/arm/arm64 packages for:
#  - Debian 9
#  - Ubuntu 18.04
#  - Ubuntu 20.04

name: $(MajorVersion).$(MinorVersion).$(PatchVersion).$(Date:yyyyMMdd)$(Rev:rr)

parameters:
  - name: performSigning
    type: boolean
    displayName: 'Perform code signing'
    default: true
  - name: build_targets
    type: object
    default:
      - variantName: ubuntu20.04
        friendlyVariantName: ubuntu2004
        architecture: amd64
        containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-amd64:$(CONTAINER_TAG)
        platform: linux/amd64
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true
      - variantName: ubuntu20.04
        friendlyVariantName: ubuntu2004
        architecture: arm
        containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-arm:$(CONTAINER_TAG)
        platform: linux/arm/v7
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true
      - variantName: ubuntu20.04
        friendlyVariantName: ubuntu2004
        architecture: arm64
        containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-arm64:$(CONTAINER_TAG)
        platform: linux/arm64/v8
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true
      - variantName: ubuntu18.04
        friendlyVariantName: ubuntu1804
        architecture: amd64
        containerPath: $(CONTAINER_REGISTRY)/ubuntu18.04-dev-amd64:$(CONTAINER_TAG)
        platform: linux/amd64
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true
      - variantName: ubuntu18.04
        friendlyVariantName: ubuntu1804
        architecture: arm
        containerPath: $(CONTAINER_REGISTRY)/ubuntu18.04-dev-arm:$(CONTAINER_TAG)
        platform: linux/arm/v7
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true
      - variantName: ubuntu18.04
        friendlyVariantName: ubuntu1804
        architecture: arm64
        containerPath: $(CONTAINER_REGISTRY)/ubuntu18.04-dev-arm64:$(CONTAINER_TAG)
        platform: linux/arm64/v8
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true
      - variantName: debian9
        friendlyVariantName: debian9
        architecture: amd64
        containerPath: $(CONTAINER_REGISTRY)/debian9-dev-amd64:$(CONTAINER_TAG)
        platform: linux/amd64
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true
      - variantName: debian9
        friendlyVariantName: debian9
        architecture: arm
        containerPath: $(CONTAINER_REGISTRY)/debian9-dev-arm:$(CONTAINER_TAG)
        platform: linux/arm/v7
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true
      - variantName: debian9
        friendlyVariantName: debian9
        architecture: arm64
        containerPath: $(CONTAINER_REGISTRY)/debian9-dev-arm64:$(CONTAINER_TAG)
        platform: linux/arm64/v8
        performCoverage: false
        ignoreTestFailures: false
        publishArtifact: true

variables:
  SERVICE_CONNECTION: OSConfig-ACR
  CONTAINER_REGISTRY: osconfig.azurecr.io
  CONTAINER_TAG: 289651

trigger:
  branches:
    include:
    - main
pr: none

stages:
- template: stages/source_build.yaml
  parameters:
    containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-amd64:latest
    publishArtifact: true

- ${{ each target in parameters.build_targets }}:
  - template: stages/binary_build.yaml
    parameters:
      variantName: ${{ target.variantName }}
      friendlyVariantName: ${{ target.friendlyVariantName }}
      architecture: ${{ target.architecture }}
      containerPath: ${{ target.containerPath }}
      platform: ${{ target.platform }}
      performCoverage: ${{ target.performCoverage }}
      ignoreTestFailures: ${{ target.ignoreTestFailures }}
      publishArtifact: ${{ target.publishArtifact }}

- template: stages/binary_signing.yaml
  parameters:
    dependsOn:
    - ${{ each target in parameters.build_targets }}:
      - binary_${{ target.friendlyVariantName }}_${{ target.architecture }}
    performSigning: ${{ parameters.performSigning }}
    vaultName: $(VaultName)
    aadCertificateName: $(AADCertificateName)
    esrpCertificateName: $(ESRPCertificateName)
