# Continuous Integration Pipeline

name: $(MajorVersion).$(MinorVersion).$(PatchVersion).$(Date:yyyyMMdd)$(Rev:rr)

variables:
  SERVICE_CONNECTION: OSConfig-ACR
  CONTAINER_REGISTRY: osconfig.azurecr.io

stages:
- template: stages/source_build.yaml
  parameters:
    prefix: Validate
    containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-amd64:latest

- template: stages/dotnet_validate.yaml
  parameters:
    containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-amd64:latest
    sourcePath: src/tests/e2etest

- template: stages/binary_build.yaml
  parameters:
    variantName: ubuntu20.04
    friendlyVariantName: ubuntu2004
    architecture: amd64
    containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-amd64:latest
    platform: linux/amd64
    publishArtifact: false
    prefix: pkg

- template: stages/binary_build.yaml
  parameters:
    variantName: ubuntu20.04
    friendlyVariantName: ubuntu2004
    architecture: arm
    containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-arm:latest
    platform: linux/arm/v7
    publishArtifact: false
    prefix: pkg

- template: stages/binary_build.yaml
  parameters:
    variantName: ubuntu20.04
    friendlyVariantName: ubuntu2004
    architecture: arm64
    containerPath: $(CONTAINER_REGISTRY)/ubuntu20.04-dev-arm64:latest
    platform: linux/arm64/v8
    publishArtifact: false
    prefix: pkg

- template: stages/binary_build.yaml
  parameters:
    variantName: ubuntu18.04
    friendlyVariantName: ubuntu1804
    architecture: amd64
    containerPath: $(CONTAINER_REGISTRY)/ubuntu18.04-dev-amd64:latest
    platform: linux/amd64
    publishArtifact: false
    prefix: pkg

- template: stages/binary_build.yaml
  parameters:
    variantName: ubuntu18.04
    friendlyVariantName: ubuntu1804
    architecture: arm
    containerPath: $(CONTAINER_REGISTRY)/ubuntu18.04-dev-arm:latest
    platform: linux/arm/v7
    publishArtifact: false
    prefix: pkg

- template: stages/binary_build.yaml
  parameters:
    variantName: ubuntu18.04
    friendlyVariantName: ubuntu1804
    architecture: arm64
    containerPath: $(CONTAINER_REGISTRY)/ubuntu18.04-dev-arm64:latest
    platform: linux/arm64/v8
    publishArtifact: false
    prefix: pkg

- template: stages/binary_build.yaml
  parameters:
    variantName: debian9
    friendlyVariantName: debian9
    architecture: amd64
    containerPath: $(CONTAINER_REGISTRY)/debian9-dev-amd64:latest
    platform: linux/amd64
    publishArtifact: false
    prefix: pkg

- template: stages/binary_build.yaml
  parameters:
    variantName: debian9
    friendlyVariantName: debian9
    architecture: arm
    containerPath: $(CONTAINER_REGISTRY)/debian9-dev-arm:latest
    platform: linux/arm/v7
    publishArtifact: false
    prefix: pkg

- template: stages/binary_build.yaml
  parameters:
    variantName: debian9
    friendlyVariantName: debian9
    architecture: arm64
    containerPath: $(CONTAINER_REGISTRY)/debian9-dev-arm64:latest
    platform: linux/arm64/v8
    publishArtifact: false
    prefix: pkg