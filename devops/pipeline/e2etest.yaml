# E2E test pipeline - Performs end-to-end tests
# Pipeline supports both Cloud and Baremetal targets.
# Every target host supports using packages from the Package Build pipeline
# or building from source using the defined 'sourceBranch'

name: $(MajorVersion).$(MinorVersion).$(PatchVersion).$(Date:yyyyMMdd)$(Rev:rr)

trigger:
  branches:
    include:
    - main
pr: none

resources:
  containers:
  - container: ubuntu
    image: ubuntu:18.04
  - container: dotnet
    image: mcr.microsoft.com/dotnet/sdk:5.0

parameters:
- name: runCloudTests
  displayName: Run Cloud tests
  type: boolean
  default: true
- name: runBaremetalTests
  displayName: Run Baremetal tests
  type: boolean
  default: true
- name: testExpression
  displayName: Test expression to use
  type: string
  default: ' '
- name: skipTeardown
  displayName: Leave test infrastructure in-place
  type: boolean
  default: false
- name: sourceBranch
  displayName: 'Branch to use package from (default: source branch if empty)'
  type: string
  default: ' '
- name: twinTimeout
  displayName: Timeout for twin updates
  type: number
  default: 90
- name: postScript
  displayName: Shell script to execute after osconfig install
  type: string
  default: ' '

- name: cloud_targets
  type: object
  default:
    - distroName: ubuntu-18.04
      image_publisher: Canonical
      image_offer: UbuntuServer
      image_sku: 18.04-LTS
      image_version: latest
      packagePattern: '**/*bionic_x86_64.deb'
      device_id: ubuntu1804
      pre_script: >-
        export DEBIAN_FRONTEND=noninteractive &&
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg &&
        sudo cp ./microsoft.gpg /etc/apt/trusted.gpg.d/ &&
        curl https://packages.microsoft.com/config/ubuntu/18.04/multiarch/prod.list > ./microsoft-prod.list &&
        sudo cp ./microsoft-prod.list /etc/apt/sources.list.d/ &&
        sudo apt update &&
        sudo apt install aziot-identity-service
    - distroName: ubuntu-20.04
      image_publisher: Canonical
      image_offer: 0001-com-ubuntu-server-focal
      image_sku: 20_04-lts-gen2
      image_version: latest
      packagePattern: '**/*focal_x86_64.deb'
      device_id: ubuntu2004
      pre_script: >-
        export DEBIAN_FRONTEND=noninteractive &&
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg &&
        sudo cp ./microsoft.gpg /etc/apt/trusted.gpg.d/ &&
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > ./microsoft-prod.list &&
        sudo cp ./microsoft-prod.list /etc/apt/sources.list.d/ &&
        sudo apt update &&
        sudo apt install aziot-identity-service

- name: baremetal_targets
  type: object
  default: []
    # - jobName: debian9_vm_amd64
    #   deviceId: debian9_vm_amd64
    #   packagePattern: '**/*stretch_x86_64.deb'
    #   environment: debian9-vm-amd64

variables:
  SERVICE_CONNECTION: OSconfig-arm
  IOTHUBOWNER_CONN_STR: $(IOTHUBOWNER_CONNECTION_STRING)

stages:
- template: stages/e2etest_iothub_create.yaml

- ${{ if eq(parameters.runCloudTests, 'true') }}:
  - ${{ each target in parameters.cloud_targets }}:
    - template: stages/e2etest_cloud.yaml
      parameters:
        testExpression: ${{ parameters.testExpression }}
        skipTeardown: ${{ parameters.skipTeardown }}
        twinTimeout: ${{ parameters.twinTimeout }}
        postScript: ${{ parameters.postScript }}
        sourceBranch: ${{ parameters.sourceBranch }}
        target: ${{ target }}

- ${{ if eq(parameters.runBaremetalTests, 'true') }}:
  - ${{ each target in parameters.baremetal_targets }}:
    - template: stages/e2etest_baremetal.yaml
      parameters:
        jobName: ${{ target.jobName }}
        deviceId: ${{ target.deviceId }}
        packagePattern: ${{ target.packagePattern }}
        environment: ${{ target.environment }}
        testExpression: ${{ parameters.testExpression }}
        sourceBranch: ${{ parameters.sourceBranch }}

- template: stages/e2etest_iothub_delete.yaml
  parameters:
    dependsOn:
    - ${{ each target in parameters.cloud_targets }}:
      - Run_Test_Driver_${{ target.device_id }}
    - ${{ each target in parameters.baremetal_targets }}:
      - Run_Test_Driver_${{ target.deviceId }}