trigger: none
pr: none

parameters:
- name: BUILD_UBUNTU2004_AMD64
  displayName: 'Ubuntu 20.04 AMD64 Dev Container'
  type: boolean
  default: false
- name: BUILD_UBUNTU2004_ARM
  displayName: 'Ubuntu 20.04 ARM Dev Container'
  type: boolean
  default: false
- name: BUILD_UBUNTU2004_ARM64
  displayName: 'Ubuntu 20.04 ARM64 Dev Container'
  type: boolean
  default: false

- name: BUILD_UBUNTU1804_AMD64
  displayName: 'Ubuntu 18.04 AMD64 Dev Container'
  type: boolean
  default: false
- name: BUILD_UBUNTU1804_ARM
  displayName: 'Ubuntu 18.04 ARM Dev Container'
  type: boolean
  default: false
- name: BUILD_UBUNTU1804_ARM64
  displayName: 'Ubuntu 18.04 ARM64 Dev Container'
  type: boolean
  default: false

- name: BUILD_DEBIAN9_AMD64
  displayName: 'Debian 9 AMD64 Dev Container'
  type: boolean
  default: false
- name: BUILD_DEBIAN9_ARM
  displayName: 'Debian 9 ARM Dev Container'
  type: boolean
  default: false
- name: BUILD_DEBIAN9_ARM64
  displayName: 'Debian 9 ARM64 Dev Container'
  type: boolean
  default: false

- name: BUILD_DEBIAN10_AMD64
  displayName: 'Debian 10 AMD64 Dev Container'
  type: boolean
  default: false
- name: BUILD_DEBIAN10_ARM
  displayName: 'Debian 10 ARM Dev Container'
  type: boolean
  default: false
- name: BUILD_DEBIAN10_ARM64
  displayName: 'Debian 10 ARM64 Dev Container'
  type: boolean
  default: false

- name: BUILD_DEBIAN11_AMD64
  displayName: 'Debian 11 AMD64 Dev Container'
  type: boolean
  default: false
- name: BUILD_DEBIAN11_ARM
  displayName: 'Debian 11 ARM Dev Container'
  type: boolean
  default: false
- name: BUILD_DEBIAN11_ARM64
  displayName: 'Debian 11 ARM64 Dev Container'
  type: boolean
  default: false

variables:
  SERVICE_CONNECTION: OSConfig-ACR
  CONTAINER_REGISTRY: osconfig.azurecr.io
  BUILD_UBUNTU2004_AMD64: ${{ parameters.BUILD_UBUNTU2004_AMD64 }}
  BUILD_UBUNTU2004_ARM: ${{ parameters.BUILD_UBUNTU2004_ARM }}
  BUILD_UBUNTU2004_ARM64: ${{ parameters.BUILD_UBUNTU2004_ARM64 }}
  BUILD_UBUNTU1804_AMD64: ${{ parameters.BUILD_UBUNTU1804_AMD64 }}
  BUILD_UBUNTU1804_ARM: ${{ parameters.BUILD_UBUNTU1804_ARM }}
  BUILD_UBUNTU1804_ARM64: ${{ parameters.BUILD_UBUNTU1804_ARM64 }}
  BUILD_DEBIAN9_AMD64: ${{ parameters.BUILD_DEBIAN9_AMD64 }}
  BUILD_DEBIAN9_ARM: ${{ parameters.BUILD_DEBIAN9_ARM }}
  BUILD_DEBIAN9_ARM64: ${{ parameters.BUILD_DEBIAN9_ARM64 }}
  BUILD_DEBIAN10_AMD64: ${{ parameters.BUILD_DEBIAN10_AMD64 }}
  BUILD_DEBIAN10_ARM: ${{ parameters.BUILD_DEBIAN10_ARM }}
  BUILD_DEBIAN10_ARM64: ${{ parameters.BUILD_DEBIAN10_ARM64 }}
  BUILD_DEBIAN11_AMD64: ${{ parameters.BUILD_DEBIAN11_AMD64 }}
  BUILD_DEBIAN11_ARM: ${{ parameters.BUILD_DEBIAN11_ARM }}
  BUILD_DEBIAN11_ARM64: ${{ parameters.BUILD_DEBIAN11_ARM64 }}

jobs:
- job: Build
  timeoutInMinutes: 360
  pool:
    vmImage: 'ubuntu-20.04'

  strategy:
    matrix:
      Container-ubuntu1804-amd64:
        dockerFilePath: devops/docker/ubuntu18.04-amd64/Dockerfile
        acrRepo: ubuntu18.04-dev-amd64
        enabled: $(BUILD_UBUNTU1804_AMD64)
      Container-ubuntu1804-arm:
        dockerFilePath: devops/docker/ubuntu18.04-arm/Dockerfile
        acrRepo: ubuntu18.04-dev-arm
        enabled: $(BUILD_UBUNTU1804_ARM)
      Container-ubuntu1804-arm64:
        dockerFilePath: devops/docker/ubuntu18.04-arm64/Dockerfile
        acrRepo: ubuntu18.04-dev-arm64
        enabled: $(BUILD_UBUNTU1804_ARM64)
      Container-ubuntu2004-amd64:
        dockerFilePath: devops/docker/ubuntu20.04-amd64/Dockerfile
        acrRepo: ubuntu20.04-dev-amd64
        enabled: $(BUILD_UBUNTU2004_AMD64)
      Container-ubuntu2004-arm:
        dockerFilePath: devops/docker/ubuntu20.04-arm/Dockerfile
        acrRepo: ubuntu20.04-dev-arm
        enabled: $(BUILD_UBUNTU2004_ARM)
      Container-ubuntu2004-arm64:
        dockerFilePath: devops/docker/ubuntu20.04-arm64/Dockerfile
        acrRepo: ubuntu20.04-dev-arm64
        enabled: $(BUILD_UBUNTU2004_ARM64)
      Container-debian9-amd64:
        dockerFilePath: devops/docker/debian9-amd64/Dockerfile
        acrRepo: debian9-dev-amd64
        enabled: $(BUILD_DEBIAN9_AMD64)
      Container-debian9-arm:
        dockerFilePath: devops/docker/debian9-arm/Dockerfile
        acrRepo: debian9-dev-arm
        enabled: $(BUILD_DEBIAN9_ARM)
      Container-debian9-arm64:
        dockerFilePath: devops/docker/debian9-arm64/Dockerfile
        acrRepo: debian9-dev-arm64
        enabled: $(BUILD_DEBIAN9_ARM64)
      Container-debian10-amd64:
        dockerFilePath: devops/docker/debian10-amd64/Dockerfile
        acrRepo: debian10-dev-amd64
        enabled: $(BUILD_DEBIAN10_AMD64)
      Container-debian10-arm:
        dockerFilePath: devops/docker/debian10-arm/Dockerfile
        acrRepo: debian10-dev-arm
        enabled: $(BUILD_DEBIAN10_ARM)
      Container-debian10-arm64:
        dockerFilePath: devops/docker/debian10-arm64/Dockerfile
        acrRepo: debian10-dev-arm64
        enabled: $(BUILD_DEBIAN10_ARM64)
      Container-debian11-amd64:
        dockerFilePath: devops/docker/debian11-amd64/Dockerfile
        acrRepo: debian11-dev-amd64
        enabled: $(BUILD_DEBIAN11_AMD64)
      Container-debian11-arm:
        dockerFilePath: devops/docker/debian11-arm/Dockerfile
        acrRepo: debian11-dev-arm
        enabled: $(BUILD_DEBIAN11_ARM)
      Container-debian11-arm64:
        dockerFilePath: devops/docker/debian11-arm64/Dockerfile
        acrRepo: debian11-dev-arm64
        enabled: $(BUILD_DEBIAN11_ARM64)

  steps:
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    displayName: Setup QEMU emulation
    condition: eq(variables['enabled'], 'true')

  - task: Docker@2
    displayName: Build and Push
    condition: eq(variables['enabled'], 'true')
    inputs:
      command: buildAndPush
      containerRegistry: $(SERVICE_CONNECTION)
      repository: $(acrRepo)
      Dockerfile: $(Build.SourcesDirectory)/$(dockerFilePath)
      tags: |
        $(Build.BuildId)
        latest
