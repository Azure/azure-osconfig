# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# centos:8 / 2024-11-20
FROM mcr.microsoft.com/mirror/docker/library/centos@sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c473f432b177

# CentOS Linux 8 had reached the End Of Life (EOL) on December 31st, 2021.
# It means that CentOS 8 will no longer receive development resources from
# the official CentOS project. After Dec 31st, 2021, if you need to update
# your CentOS, you need to change the mirrors to vault.centos.org where they
# will be archived permanently

# .NET / ASA / sarif-tools setup
RUN rpm -Uv https://packages.microsoft.com/config/centos/8/packages-microsoft-prod.rpm \
    && sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* \
    && sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-* \
    && yum install -y \
        wget-1.19.5-10.el8 \
        libicu-60.3-2.el8_1 \
        dotnet-sdk-8.0-8.0.301-1 \
        python38-3.8.8 \
        python38-pip-19.3.1 \
   && dotnet tool install -g Microsoft.CST.AttackSurfaceAnalyzer.CLI --version 2.3.313+f3ddb94bf9 \
   && pip3 install sarif-tools==2.0.0 \
   && yum clean all \
   && rm -rf /var/cache/yum

ENV PATH="$PATH:/root/.dotnet/tools/" \
    # Enable detection of running in a container
    DOTNET_RUNNING_IN_CONTAINER=true

# Setup MC
RUN yum install -y  \
    openssl \
    powershell-7.4.6 \
    && wget https://github.com/microsoft/omi/releases/download/v1.9.1-0/omi-1.9.1-0.ssl_110.ulinux.s.x64.rpm \
    && echo "7287aad50de4a64655a1efc71fcbf8a6 ./omi-1.9.1-0.ssl_110.ulinux.s.x64.rpm" | md5sum -c \
    && rpm -i ./omi-1.9.1-0.ssl_110.ulinux.s.x64.rpm \
    && rm -f ./omi-1.9.1-0.ssl_110.ulinux.s.x64.rpm \
    && pwsh --command "Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted" \
    && pwsh --command "Install-Module -Name GuestConfiguration -RequiredVersion 4.6.0" \
    && yum clean all \
    && rm -rf /var/cache/yum

ENV LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/opt/omi/lib/"

# Working dir represents full github path to this place
RUN mkdir -p /azure/azure-osconfig/devops/scripts/asa/
WORKDIR /azure/azure-osconfig/devops/scripts/asa/
# Copy setup script as a last step to do not require rebuilding the previous layers when the script is updated
COPY ./scan.sh /azure/azure-osconfig/devops/scripts/asa/scan.sh

ENTRYPOINT [ "/azure/azure-osconfig/devops/scripts/asa/scan.sh" ]
