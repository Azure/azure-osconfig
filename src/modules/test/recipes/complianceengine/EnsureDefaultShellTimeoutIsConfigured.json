[
  {
    "Action": "LoadModule",
    "Module": "complianceengine.so"
  },
  {
    "ObjectType": "Desired",
    "ComponentName": "ComplianceEngine",
    "ObjectName": "procedureTest",
    "Payload": {
      "audit": {
        "EnsureDefaultShellTimeoutIsConfigured": {
        }
      }
    }
  },



  // Back up the original /etc/bashrc file
  {
    "RunCommand": "[ -f /etc/bashrc ] && mv -v /etc/bashrc /etc/bashrc.bak"
  },
  {
    "RunCommand": "[ -f /etc/bash.bashrc ] && mv -v /etc/bash.bashrc /etc/bash.bashrc.bak"
  },
  {
    "RunCommand": "[ -f /etc/profile ] && mv -v /etc/profile /etc/profile.bak"
  },
  {
    "RunCommand": "for f in `find /etc/profile.d -name '*.sh'`; do mv -v \"$f\" \"$f.bak\"; done"
  },

  // All the rc files are gone now, the audit should fail
  {
    "ObjectType": "Reported",
    "ComponentName": "ComplianceEngine",
    "ObjectName": "auditTest",
    "Payload": "{ EnsureDefaultShellTimeoutIsConfigured: TMOUT is not set } == FALSE"
  },

  // Create a TMOUT variable with invalid value - above 900
  {
    "RunCommand": "echo 'TMOUT=1000' > /etc/bashrc"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "ComplianceEngine",
    "ObjectName": "auditTest",
    "Payload": "{ EnsureDefaultShellTimeoutIsConfigured: TMOUT is set to an incorrect value in /etc/bashrc } == FALSE"
  },

  // Create a TMOUT variable, but there's missing the readonly attribute
  {
    "RunCommand": "echo 'TMOUT=100' > /etc/bashrc"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "ComplianceEngine",
    "ObjectName": "auditTest",
    "Payload": "{ EnsureDefaultShellTimeoutIsConfigured: TMOUT is set to a correct value in /etc/bashrc, TMOUT is not readonly in /etc/bashrc } == FALSE"
  },

  // Add the readonly attribute, but there's no export yet
  {
    "RunCommand": "echo 'readonly TMOUT' >> /etc/bashrc"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "ComplianceEngine",
    "ObjectName": "auditTest",
    "Payload": "{ EnsureDefaultShellTimeoutIsConfigured: TMOUT is set to a correct value in /etc/bashrc, TMOUT is set readonly in /etc/bashrc, TMOUT is not exported in /etc/bashrc } == FALSE"
  },

  // Add the missing export, the rule should succeed now
  {
    "RunCommand": "echo 'export TMOUT' >> /etc/bashrc"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "ComplianceEngine",
    "ObjectName": "auditTest",
    "Payload": "PASS{ EnsureDefaultShellTimeoutIsConfigured: TMOUT is set to a correct value in /etc/bashrc, TMOUT is set readonly in /etc/bashrc, TMOUT is exported in /etc/bashrc, TMOUT variable is properly defined } == TRUE"
  },

  // Multiple TMOUT settings are not allowed within a single file
  {
    "RunCommand": "echo 'TMOUT=200' >> /etc/bashrc"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "ComplianceEngine",
    "ObjectName": "auditTest",
    "Payload": "{ EnsureDefaultShellTimeoutIsConfigured: TMOUT is set to a correct value in /etc/bashrc, TMOUT is set multiple times in /etc/bashrc } == FALSE"
  },

  // Multiple definitions are not allowed across different files
  {
    "RunCommand": "sed -i '$d' /etc/bashrc"
  },
  {
    "RunCommand": "echo -e 'TMOUT=200\nreadonly TMOUT\nexport TMOUT' > /etc/bash.bashrc"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "ComplianceEngine",
    "ObjectName": "auditTest",
    "Payload": "{ EnsureDefaultShellTimeoutIsConfigured: TMOUT is set to a correct value in /etc/bashrc, TMOUT is set readonly in /etc/bashrc, TMOUT is exported in /etc/bashrc, TMOUT is set to a correct value in /etc/bash.bashrc, TMOUT is set readonly in /etc/bash.bashrc, TMOUT is exported in /etc/bash.bashrc, TMOUT is set in multiple locations } == FALSE"
  },

  // Cleanup
  {
    "RunCommand":"[ -f /etc/bashrc.bak ] && mv -v /etc/bashrc.bak /etc/bashrc"
  },
  {
    "RunCommand":"[ -f /etc/bash.bashrc.bak ] && mv -v /etc/bash.bashrc.bak /etc/bash.bashrc"
  },
  {
    "RunCommand":"[ -f /etc/profile.bak ] && mv -v /etc/profile.bak /etc/profile"
  },
  {
    "RunCommand": "for f in `find /etc/profile.d -name '*.sh.bak'`; do mv -v \"$f\" \"${f%.bak}\"; done"
  },


  {
    "Action": "UnloadModule"
  }
]
