[
  {
    "Action": "LoadModule",
    "Module": "compliance.so"
  },
  {
    "ObjectType": "Desired",
    "ComponentName": "Compliance",
    "ObjectName": "procedureEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": {
      "audit": {
        "allOf": [
          {
            "EnsureInteractiveUsersDotFilesAccessIsConfigured": {}
          }
        ]
      },
      "remediate": {
        "allOf": [
          {
            "EnsureInteractiveUsersDotFilesAccessIsConfigured": {}
          }
        ]
      }
    }
  },


  // Initial state should be clean
  {
    "ObjectType": "Desired",
    "ComponentName": "Compliance",
    "ObjectName": "remediateEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": ""
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "Compliance",
    "ObjectName": "auditEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": "PASS{ allOf: [{ EnsureInteractiveUsersDotFilesAccessIsConfigured:  } == TRUE]} == TRUE"
  },


  // Make sure there are no residues of other module tests
  {
    "RunCommand": "! stat /home/securitybaselinetest"
  },
  {
    "RunCommand": "! stat /home/securitybaselinetest2"
  },



  // Missing home directory
  {
    "RunCommand": "groupadd -g 8888 securitybaselinetest"
  },
  {
    "RunCommand": "useradd -M -g 8888 securitybaselinetest && id securitybaselinetest"
  },


  // We do not fail the rule if user's home does not exist
  {
    "ObjectType": "Reported",
    "ComponentName": "Compliance",
    "ObjectName": "auditEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": "PASS{ allOf: [{ EnsureInteractiveUsersDotFilesAccessIsConfigured:  } == TRUE]} == TRUE"
  },
  // Fix the missing home directory
  {
    "RunCommand": "mkdir /home/securitybaselinetest && chown securitybaselinetest:securitybaselinetest /home/securitybaselinetest && chmod 750 /home/securitybaselinetest"
  },


  // Create a .x file with invalid permissions
  {
    "RunCommand": "touch /home/securitybaselinetest/.x && chown securitybaselinetest:securitybaselinetest /home/securitybaselinetest/.x && chmod 777 /home/securitybaselinetest/.x"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "Compliance",
    "ObjectName": "auditEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": "{ allOf: [{ EnsureInteractiveUsersDotFilesAccessIsConfigured:  } == FALSE]} == FALSE"
  },
  {
    "ObjectType": "Desired",
    "ComponentName": "Compliance",
    "ObjectName": "remediateEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": ""
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "Compliance",
    "ObjectName": "auditEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": "PASS{ allOf: [{ EnsureInteractiveUsersDotFilesAccessIsConfigured:  } == TRUE]} == TRUE"
  },
  {
    "RunCommand": "stat /home/securitybaselinetest/.x | grep -E 'Access: \\(0644/-rw-r--r--\\)'"
  },
  {
    "RunCommand": "rm /home/securitybaselinetest/.x"
  },


  // Create a .forward file with invalid permissions nested in subdirectories, this is handled by CIS
  {
    "RunCommand": "mkdir -p /home/securitybaselinetest/foo/bar && touch /home/securitybaselinetest/foo/bar/.forward && chown securitybaselinetest:securitybaselinetest /home/securitybaselinetest/foo/bar/.forward && chmod 777 /home/securitybaselinetest/foo/bar/.forward"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "Compliance",
    "ObjectName": "auditEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": "{ allOf: [{ EnsureInteractiveUsersDotFilesAccessIsConfigured: '.forward' exists in home directory '\/home\/securitybaselinetest' } == FALSE]} == FALSE"
  },
  // Remediation won't drop this file
  {
    "ObjectType": "Desired",
    "ComponentName": "Compliance",
    "ObjectName": "remediateEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": ""
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "Compliance",
    "ObjectName": "auditEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": "{ allOf: [{ EnsureInteractiveUsersDotFilesAccessIsConfigured: '.forward' exists in home directory '\/home\/securitybaselinetest' } == FALSE]} == FALSE"
  },
  {
    "RunCommand": "stat /home/securitybaselinetest/foo/bar/.forward | grep -E 'Access: \\(0777/-rwxrwxrwx\\)'"
  },
  {
    "RunCommand": "rm /home/securitybaselinetest/foo/bar/.forward"
  },


  // Create a .netrc file with invalid permissions
  {
    "RunCommand": "touch /home/securitybaselinetest/.netrc && chown securitybaselinetest:securitybaselinetest /home/securitybaselinetest/.netrc && chmod 777 /home/securitybaselinetest/.netrc"
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "Compliance",
    "ObjectName": "auditEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": "{ allOf: [{ EnsureInteractiveUsersDotFilesAccessIsConfigured:  } == FALSE]} == FALSE"
  },
  {
    "ObjectType": "Desired",
    "ComponentName": "Compliance",
    "ObjectName": "remediateEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": ""
  },
  {
    "ObjectType": "Reported",
    "ComponentName": "Compliance",
    "ObjectName": "auditEnsureInteractiveUsersDotFilesAccessIsConfigured",
    "Payload": "PASS{ allOf: [{ EnsureInteractiveUsersDotFilesAccessIsConfigured:  } == TRUE]} == TRUE"
  },
  {
    "RunCommand": "stat /home/securitybaselinetest/.netrc | grep -E 'Access: \\(0600/-rw-------\\)'"
  },
  {
    "RunCommand": "rm /home/securitybaselinetest/.netrc"
  },


  // cleanup
  {
    "RunCommand": "userdel -f -r securitybaselinetest || true"
  },
  {
    "RunCommand": "groupdel securitybaselinetest || true"
  },
  {
    "Action": "UnloadModule"
  }
]
