{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "audit": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "FileRegexMatch"
          ],
          "additionalProperties": false,
          "properties": {
            "FileRegexMatch": {
              "type": "object",
              "required": [
                "filename",
                "matchPattern"
              ],
              "additionalProperties": false,
              "properties": {
                "filename": {
                  "type": "string",
                  "description": "Path to the file to check"
                },
                "matchOperation": {
                  "type": "string",
                  "description": "Operation to perform on the file contents",
                  "pattern": "(^\\$[a-zA-Z0-9_]+:(pattern match)$|(^pattern match$))"
                },
                "matchPattern": {
                  "type": "string",
                  "description": "The pattern to match against the file contents"
                },
                "stateOperation": {
                  "type": "string",
                  "description": "Operation to perform on each line that matches the 'matchPattern'",
                  "pattern": "(^\\$[a-zA-Z0-9_]+:(pattern match)$|(^pattern match$))"
                },
                "statePattern": {
                  "type": "string",
                  "description": "The pattern to match against each line that matches the 'statePattern'"
                },
                "caseSensitive": {
                  "type": "string",
                  "description": "Determine whether the match should be case sensitive, applies to both 'matchPattern' and 'statePattern'",
                  "pattern": "(^\\$[a-zA-Z0-9_]+:(true|false)$|(^true|false$))"
                },
                "behavior": {
                  "type": "string",
                  "description": "Determine the function behavior",
                  "pattern": "(^\\$[a-zA-Z0-9_]+:((all_exist|any_exist|at_least_one_exists|none_exist))$|(^(all_exist|any_exist|at_least_one_exists|none_exist)$))"
                }
              }
            }
          }
        }
      ]
    },
    "remediation": {
      "anyOf": []
    }
  }
}
