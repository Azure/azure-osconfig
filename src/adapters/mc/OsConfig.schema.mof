#pragma include ("cim_schema_2.26.0.mof")
#pragma include ("MSFT_Qualifiers.mof")
#pragma include ("OMI_BaseResource.mof")
#pragma include ("MSFT_Credential.mof")

[ClassVersion("1.0.0")]
class ReasonClass
{
    [read]
    string Phrase;

    [read]
    string Code;
};

[ClassVersion("3.0.0")]
class OsConfigResource : OMI_BaseResource
{
  [key] 
  string RuleId;

  [write]
  string PayloadKey;

  [write, Description("MIM Component (for audit and remediation)")]
  string ComponentName;

  [write, Description("Initialization MIM Object (for audit and remediation)")]
  string InitObjectName;

  [write, Description("Reported MIM Object (for audit)")]
  string ReportedObjectName;

  [read, Description("Reported MIM Setting value (for audit)")]
  string ReportedObjectValue;

  [write, Description("Expected MIM Setting value (for audit)")]
  string ExpectedObjectValue;

  [write, Description("Desired MIM Object (for remediation)")]
  string DesiredObjectName;

  [write, Description("Desired MIM Setting value (for remediation)")]
  string DesiredObjectValue;

  [read, Description("Reported MPI result (for audit and remediation)")]
  uint32 ReportedMpiResult;

  [read, EmbeddedInstance("ReasonClass")] 
  string Reasons[];

  [static, Description("Get resource state based on input configuration.")]
  uint32 GetTargetResource(
    [in, EmbeddedInstance("OsConfigResource"), Description("Desired configuration to be applied.")]
    string InputResource,
    [in, Description("Flags passed to the providers. Reserved for future use.")] 
    uint32 Flags,
    [out, EmbeddedInstance("OsConfigResource"), Description("The current configuration state.")]
    string OutputResource
  );
    
  [static, Description("Test resource state based on input configuration.")]
  uint32 TestTargetResource(
    [in, EmbeddedInstance("OsConfigResource"), Description("Desired configuration to be applied.")]
    string InputResource,
    [in, Description("Flags passed to the providers. Reserved for future use.")]
    uint32 Flags,
    [out, Description("True if identical. False otherwise.")]
    boolean Result,
    [out, Description("Context information that the provider can use to optimize the set. This is optional.")]
    uint64 ProviderContext
  );

  [static, Description("Set desired configuration based on input configuration.")]
  uint32 SetTargetResource(
    [in, EmbeddedInstance("OsConfigResource"), Description("Desired configuration to be applied.")]
    string InputResource,
    [in, Description("Context information that the provider can use to optimize the set. This is optional.")]
    uint64 ProviderContext,
    [in, Description("Flags passed to the providers. Reserved for future use.")]
    uint32 Flags
  );
};
 